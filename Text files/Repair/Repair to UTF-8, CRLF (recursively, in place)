#!/usr/bin/env bash

# Import the script 'common-functions.sh'
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(echo "$SCRIPT_DIR" | grep --only-matching "^.*scripts[^/]*")
source "$ROOT_DIR/common-functions.sh"

# Initial checks
_check_dependencies "iconv(libc-bin) perl(perl-base)"
_display_wait_box
INPUT_FILES=$(_get_files "$*" "type=file_recursive; mime=text,application; skip_encoding=binary; skip_extension=pdf,bak")
OUTPUT_DIR=$PWD

_main_task() {
    local INPUT_FILE=$1
    local OUTPUT_DIR=$2
    local OUTPUT_FILE=""
    local STD_OUTPUT=""
    local BACKUP_FILE=""
    local TEMP_FILE1=""
    local TEMP_FILE2=""
    local TEMP_FILE3=""
    local TEMP_FILE4=""

    # Work on a temp file
    TEMP_FILE1=$(mktemp --tmpdir="$TEMP_DIR_TASK" --suffix="-file1")
    TEMP_FILE2=$(mktemp --tmpdir="$TEMP_DIR_TASK" --suffix="-file2")
    TEMP_FILE3=$(mktemp --tmpdir="$TEMP_DIR_TASK" --suffix="-file3")
    TEMP_FILE4=$(mktemp --tmpdir="$TEMP_DIR_TASK" --suffix="-file4")

    # Run the process (part 1) 'convert encoding to utf-8'
    STD_OUTPUT=$(iconv -f "$(file --brief --mime-encoding "$INPUT_FILE")" "$INPUT_FILE" -t utf-8 -o "$TEMP_FILE1")
    _check_result "$?" "$STD_OUTPUT" "$INPUT_FILE" "" || return 1

    # Run the process (part 2) 'convert line ending to windows'
    STD_OUTPUT=$(perl -pe 's/\r\n|\n|\r/\r\n/g' "$TEMP_FILE1" >"$TEMP_FILE2")
    _check_result "$?" "$STD_OUTPUT" "$INPUT_FILE" "" || return 1

    # Run the process (part 3) 'remove trailing spaces'
    STD_OUTPUT=$(sed 's|[ \t]*\(\r*\)$|\1|' "$TEMP_FILE2" >"$TEMP_FILE3")
    _check_result "$?" "$STD_OUTPUT" "$INPUT_FILE" "" || return 1

    # Run the process (part 4) 'remove empty line in EOF'
    echo "" >>"$TEMP_FILE3"
    STD_OUTPUT=$(sed ':Loop;N;$!bLoop;s|\n*$||g' "$TEMP_FILE3" >"$TEMP_FILE4")
    _check_result "$?" "$STD_OUTPUT" "$INPUT_FILE" "" || return 1

    # Move the temp file to the output
    OUTPUT_FILE=$INPUT_FILE
    _move_temp_file_to_output "$INPUT_FILE" "$TEMP_FILE4" "$OUTPUT_FILE" || return 1

    # Remove temporary files on each iteration (if not removed before)
    rm -rf "$TEMP_FILE1"
    rm -rf "$TEMP_FILE2"
    rm -rf "$TEMP_FILE3"
    rm -rf "$TEMP_FILE4"
}

_run_main_task_parallel "$INPUT_FILES" "$OUTPUT_DIR"
_display_result_box "$OUTPUT_DIR"
